var tipuesearch = {"pages": [{'title': 'About', 'text': '組員名單 40923102 web \xa0 | \xa0 40923102 repo \xa0 | \xa0 grp web \xa0 | \xa0 grp repo 40923104 web \xa0 | \xa0 40923104 repo \xa0 | \xa0 grp web \xa0 | \xa0 grp repo 40923105 web \xa0 | \xa0 40923105 repo \xa0 | \xa0 grp web \xa0 | \xa0 grp repo 40923106 web \xa0 | \xa0 40923106 repo \xa0 | \xa0 grp web \xa0 | \xa0 grp repo 40923107 web \xa0 | \xa0 40923107 repo \xa0 | \xa0 grp web \xa0 | \xa0 grp repo 40923110 web \xa0 | \xa0 40923110 repo \xa0 | \xa0 grp web \xa0 | \xa0 grp repo 40923121 web \xa0 | \xa0 40923121 repo \xa0 | \xa0 grp web \xa0 | \xa0 grp repo 40923153 web \xa0 | \xa0 40923153 repo \xa0 | \xa0 grp web \xa0 | \xa0 grp repo \n', 'tags': '', 'url': 'About.html'}, {'title': '每周紀錄', 'text': '記錄每周上課內容 \n', 'tags': '', 'url': '每周紀錄.html'}, {'title': 'W1_0223', 'text': '將學校電腦的網路連線設置成 IPV6 的連線 \n Ipv6網路設定 \xa0載\xa0 cadlab_network_setup.zip \n', 'tags': '', 'url': 'W1_0223.html'}, {'title': 'W2_0302', 'text': '1. 建立倉儲 \n 2. 分組程式碼 \n cd2022ag1   40923101 web  |  40923101 repo  |  grp web  |  grp repo     40923103 web  |  40923103 repo  |  grp web  |  grp repo     40923108 web  |  40923108 repo  |  grp web  |  grp repo     40923119 web  |  40923119 repo  |  grp web  |  grp repo     40923137 web  |  40923137 repo  |  grp web  |  grp repo     40923154 web  |  40923154 repo  |  grp web  |  grp repo     40923156 web  |  40923156 repo  |  grp web  |  grp repo     40971134 web  |  40971134 repo  |  grp web  |  grp repo    cd2022ag2   40923102 web  |  40923102 repo  |  grp web  |  grp repo     40923104 web  |  40923104 repo  |  grp web  |  grp repo     40923105 web  |  40923105 repo  |  grp web  |  grp repo     40923106 web  |  40923106 repo  |  grp web  |  grp repo     40923107 web  |  40923107 repo  |  grp web  |  grp repo     40923110 web  |  40923110 repo  |  grp web  |  grp repo     40923121 web  |  40923121 repo  |  grp web  |  grp repo     40923153 web  |  40923153 repo  |  grp web  |  grp repo    cd2022ag3   40923109 web  |  40923109 repo  |  grp web  |  grp repo     40923111 web  |  40923111 repo  |  grp web  |  grp repo     40923114 web  |  40923114 repo  |  grp web  |  grp repo     40923115 web  |  40923115 repo  |  grp web  |  grp repo     40923122 web  |  40923122 repo  |  grp web  |  grp repo     40923129 web  |  40923129 repo  |  grp web  |  grp repo     40923146 web  |  40923146 repo  |  grp web  |  grp repo     40923148 web  |  40923148 repo  |  grp web  |  grp repo    cd2022ag4   40923116 web  |  40923116 repo  |  grp web  |  grp repo     40923124 web  |  40923124 repo  |  grp web  |  grp repo     40923125 web  |  40923125 repo  |  grp web  |  grp repo     40923126 web  |  40923126 repo  |  grp web  |  grp repo     40923127 web  |  40923127 repo  |  grp web  |  grp repo     40923128 web  |  40923128 repo  |  grp web  |  grp repo     40923138 web  |  40923138 repo  |  grp web  |  grp repo     40923143 web  |  40923143 repo  |  grp web  |  grp repo    cd2022ag5   40923123 web  |  40923123 repo  |  grp web  |  grp repo     40923131 web  |  40923131 repo  |  grp web  |  grp repo     40923133 web  |  40923133 repo  |  grp web  |  grp repo     40923134 web  |  40923134 repo  |  grp web  |  grp repo     40923135 web  |  40923135 repo  |  grp web  |  grp repo     40923139 web  |  40923139 repo  |  grp web  |  grp repo     40923142 web  |  40923142 repo  |  grp web  |  grp repo     40923151 web  |  40923151 repo  |  grp web  |  grp repo    cd2022ag6   40923113 web  |  40923113 repo  |  grp web  |  grp repo     40923130 web  |  40923130 repo  |  grp web  |  grp repo     40923140 web  |  40923140 repo  |  grp web  |  grp repo     40923144 web  |  40923144 repo  |  grp web  |  grp repo     40923145 web  |  40923145 repo  |  grp web  |  grp repo     40923149 web  |  40923149 repo  |  grp web  |  grp repo     40923150 web  |  40923150 repo  |  grp web  |  grp repo     40923152 web  |  40923152 repo  |  grp web  |  grp repo    cd2022ag7   40823132 web  |  40823132 repo  |  grp web  |  grp repo     40823143 web  |  40823143 repo  |  grp web  |  grp repo     40923117 web  |  40923117 repo  |  grp web  |  grp repo     40923118 web  |  40923118 repo  |  grp web  |  grp repo     40923120 web  |  40923120 repo  |  grp web  |  grp repo     40923136 web  |  40923136 repo  |  grp web  |  grp repo     40923147 web  |  40923147 repo  |  grp web  |  grp repo     40923157 web  |  40923157 repo  |  grp web  |  grp repo \n', 'tags': '', 'url': 'W2_0302.html'}, {'title': '建立倉儲', 'text': '先建立一個名稱為 cd2022 空倉儲 \n cd tmp\ngit clone --recurse-submodules repo.git\ncd cd2022\ngit submodule add https://github.com/mdecourse/cmsimde.git cmsimde \n 接著到近端的 cmsimde > up_dir 全選複製到近端倉儲 \n \n 再至 cmsimde 將以下檔案拉至近端倉儲 \n \n 更新 cmsimde \n cd tmp\ncd cd2022\ncd cmsimde\ngit pull origin master \n 更新後從 cmsimde>up_dir 把更新後的檔案拉進近端倉儲 \n \n', 'tags': '', 'url': '建立倉儲.html'}, {'title': '分組程式碼', 'text': '# grp_2a_old.py\nstudList = "cd2022_w4_grp.txt"\ncourTitle = "cd2022"\n\n# group title initial\ngrpTitle = studList[:6] + "ag"\n\n# student Account and github Account as inputs\ndef perWeb(s, g):\n    pSite = "<a href=\\"https://" + g + ".github.io/" + courTitle + "\\">" + s + " web</a>"\n    print(pSite)\n\ndef perRepo(s, g):\n    pSite = "<a href=\\"https://github.com/" + g + "/" + courTitle + "\\">" + s + " repo</a>"\n    print(pSite)\n    \ndef grpWeb(s, g, ord):\n    pSite = "<a href=\\"https://" + g + ".github.io/" + grpTitle + str(ord) + "\\">grp web</a>"\n    print(pSite)\n    \ndef grpRepo(s, g, ord):\n    pSite = "<a href=\\"https://github.com/" + g + "/" + grpTitle + str(ord) + "\\">grp repo</a>"\n    print(pSite)\n\n# open file, default is read mode, since txt content no chinese char\n# no encoding = "UTF-8" is needed\nwith open(studList) as fh:\n    # readlines will read into the whole line and put into list format\n    # has \\n at the end of each line\n    data = fh.readlines()\n\ngrpCount = 0\nfor i in range(len(data)):\n    # grpCount is the group order\n    grpCount = grpCount + 1\n    group = data[i].rstrip("\\n").split("\\t")\n    # use filter to remove vacant string eleament\n    # use [1:] to remove first element\n    group = list(filter(None, group))[1:]\n    print(grpTitle + str(grpCount) + "<br />")\n    for j in range(0, len(group), 2):\n        # s is the student number\n        s = group[j]\n        # g is the github account\n        g = group[j+1]\n        perWeb(s, g)\n        print("|")\n        perRepo(s, g)\n        print("|")\n        grpWeb(s, g, grpCount)\n        print("|")\n        grpRepo(s, g, grpCount)\n        print("<br />") \n', 'tags': '', 'url': '分組程式碼.html'}, {'title': 'W3', 'text': '在教室討論分配 NX 教學影片 Wink 製作 \n 40923107 1-6\xa0 \n 40923105 7-12 \n 40923110 13-18 \n 40923106 19-24 \n 40923102 25-30 \n 40923104 31-36 \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W4', 'text': '小組與大組開會，彙整各組員執行任務的進度， 利用網頁簡報說明執行流程與結果 \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W6 blog', 'text': 'blog 設定 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n \n blog 編輯 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n 在第二個 wink 中 goto script 完可以在按 local-blog，然後就可以直接推送至遠端 \n', 'tags': '', 'url': 'W6 blog.html'}, {'title': 'W7', 'text': '\n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W9', 'text': '期中自評 \n', 'tags': '', 'url': 'W9.html'}, {'title': 'W10', 'text': '\n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W11', 'text': '將原本使用的 token 更改為 SSH ↓ \n 進入 data > PuTTY > puttygen.exe > Generate > 滑鼠在上面空白處移動，創造一把 key > 全選 > 複製 > 貼到 github 設定裡的 SSH > 要Save private key 檔案名稱為 → 學號.ppk \n \n 接著開啟\xa0 putty.exe 下面的 sessions 可以自己命名 \n \n \n ▲選取剛剛儲存的ppk檔 \n \n ▲由於我們是用自己的電腦不用設 Proxy \n 用完要記得回到 Session 儲存。 \n \n 當倉儲使用github.com push 必須修改.git > config 中的 url 格式 \n 1.先以半形 # 去註解 https 的連線設定 \n 2.下面再打一行  url = git@ session :帳號/倉儲.git\xa0 \n ※ Session  名稱為自己在 putty.exe中所設定的 session \n \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': '\n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W12.html'}, {'title': 'W13', 'text': '開始遠距，打W1-W12的所學及心得 \n 1.在啟動批次檔時一起開啟 CoppeliaSim \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n 2.導入 python 程式位置，運行 CoppeliaSim 內的範例 simplePythonExample.ttt，使 CoppeliaSim 可使用python程式運作。 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n 3.利用 CoppeliaSim 執行\xa0 external_python.py \n \n \n \n \n', 'tags': '', 'url': 'W13.html'}, {'title': 'W14', 'text': 'R：逆時針轉\xa0 \xa0 \xa0 \xa0 L：順時針轉 \n D：吸盤下降\xa0 \xa0 \xa0 \xa0U：吸盤上升 \n P：激活吸盤\xa0 \xa0 \xa0 \xa0Q：停用吸盤\xa0 \xa0 \xa0 \xa0C：吸盤座標 \n 使用鍵盤控制 ↓↓↓↓ \n \n \n \n \n \n MTB自轉\xa0↓↓↓↓ \n \n \n \n \n \n function sysCall_init() \n    axis1=sim.getObject(\'/joint1\')\n    axis2=sim.getObject(\'/joint2\')\n    axis3=sim.getObject(\'/joint3\')\n    suctionPad=sim.getObject(\'/suctionPad\')\n    MTB_Robot=sim.getObject("/base")\n    BaseFrame=sim.getObject("/BaseFrame")\n    block =sim.getObject("/block")\n    rotation1 = 0\n    distance3 = 0\n    deg = math.pi/180.\nend\n   \n   \nfunction sysCall_actuation() \n  \n    rotation1 = rotation1 + 0.5*deg\n    print(rotation1)\n    sim.setJointPosition(axis1, -rotation1)\n    sim.setJointPosition(axis2, -rotation1)\n  \n    message, auxiliaryData=sim.getSimulatorMessage()\n        while message ~= -1 do\n            key=auxiliaryData[1]\n            sim.addStatusbarMessage(\'user press key:\'..key)\n            if (message==sim.message_keypress) then\n               --if (auxiliaryData[1]==112) then --p activate the suction pad\n                if (auxiliaryData[1]==string.byte(\'p\')) then\n                    -- if key p pressed activate the suction mode\nsim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'true\')\n                end -- if p\n                if (auxiliaryData[1]==113) then --q deactivate the suction pad\n                    -- if key q pressed deactivate the suction mode\nsim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'false\')\n                end -- if q\n                if (auxiliaryData[1]==114) then --r right turn in degree\n                    -- if key r pressed axis1 angle adds 5 degrees\n                     rotation1 = rotation1 + 5*deg\n                     sim.setJointPosition(axis1, rotation1)\n                end -- if r\n                if (auxiliaryData[1]==108) then --l left turn in degree\n                    -- if key l pressed axis1 angle substract 5 degrees\n                     rotation1 = rotation1 - 5*deg\n                     sim.setJointPosition(axis1, rotation1)\n                end -- if l\n                if (auxiliaryData[1]==100) then --d suction pad down\n                    -- if key d pressed axis3 will down 0.01 m\n                     distance3 = distance3 + 0.01\n                     sim.setJointPosition(axis3, distance3)\n                end -- if d\n                if (auxiliaryData[1]==117) then --u suction pad up\n                    -- if key u pressed axis3 will up 0.01 m\n                     distance3 = distance3 - 0.01\n                     sim.setJointPosition(axis3, distance3)\n                end -- if u\n                if (auxiliaryData[1]==99) then --c coordinate of block\n                    --blockPosition = sim.getObjectPosition(block, BaseFrame)\n                    blockPosition = sim.getObjectPosition(suctionPad, BaseFrame)\n                    sim.addStatusbarMessage("coordinate:"..table_to_string(blockPosition))\n                end --if c\n           end  -- if\n    message, auxiliaryData=sim.getSimulatorMessage()\n        end -- while\nend -- function\nfunction sysCall_sensing() \n--[[\n    -- Read Proximity sensor (0= nothing detected, 1 = object detected)\n    local res = sim.readProximitySensor(proximity)\n   \n    -- Check if possible to insert an new box\n    if (sim.getSimulationTime()-T_last_inserted > T_insert) and not hasStopped then\n        insertBox()\n    end\n   \n    -- If proximity sensor detects an object, stop the belt, stop inserting objects\n    if res == 1 and not hasStopped then\n        if boolList[1] then\n            sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0)\n            deltaTime = sim.getSimulationTime()-T_last_inserted\n            hasStopped = true\n        else\n            local box = table.remove(boxList,1)\n            local boxDummy = table.remove(boxDummyList,1)\n            table.remove(boolList,1)\n   \n            sim.removeObject(box)\n            sim.removeObject(boxDummy)\n        end\n    end\n   \n    -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting\n    if res == 0 and hasStopped then\n        sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed)\n        hasStopped = false\n        T_last_inserted = sim.getSimulationTime()-deltaTime\n    end\n       \n]]--\nend\nfunction sysCall_cleanup() \nend\n-- Convert a lua table into a lua syntactically correct string\nfunction table_to_string(tbl)\n    local result = "{"\n    for k, v in pairs(tbl) do\n        -- Check the key type (ignore any numerical keys - assume its an array)\n        if type(k) == "string" then\n            result = result.."[\\""..k.."\\"]".."="\n        end\n   \n        -- Check the value type\n        if type(v) == "table" then\n            result = result..table_to_string(v)\n        elseif type(v) == "boolean" then\n            result = result..tostring(v)\n        else\n            v = round(v, 4)\n            result = result.."\\""..v.."\\""\n        end\n        result = result..","\n    end\n    -- Remove leading commas from the result\n    if result ~= "" then\n        result = result:sub(1, result:len()-1)\n    end\n    return result.."}"\nend\nfunction round(x, n)\n    n = math.pow(10, n or 0)\n    x = x * n\n    if x >= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end\n    return x / n\nend\n   \n   \nfunction insertBox()\n    -- Generate random numbers\n    local rand1 = math.random()\n    local rand2 = math.random()\n    local rand3 = math.random()\n    -- Generate random disturbances on position and orientation\n    local dx = (2*rand1-1)*0.1\n    local dy = (2*rand2-1)*0.1\n    local dphi = (2*rand3-1)*0.5\n    local disturbedCoordinates = {0,0,0}\n    disturbedCoordinates[1] = insertCoordinate[1]+dx\n    disturbedCoordinates[2] = insertCoordinate[2]+dy\n    disturbedCoordinates[3] = insertCoordinate[3]\n    -- Copy and paste box and boxDummy\n    local insertedObjects = sim.copyPasteObjects({box,boxDummy},0)\n    -- Update last inserted box time\n    T_last_inserted = sim.getSimulationTime()\n    -- Move and rotate\n    sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates)\n    sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi})\n    -- Store handles to boxes and dummies\n    table.insert(boxList,insertedObjects[1])\n    table.insert(boxDummyList,insertedObjects[2]) \n    -- Decide if object is good or bad\n    local decision = math.random() \n    if decision <= goodPercentage then\n    -- Object is good, assign goodColor\n        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor)\n        table.insert(boolList,true)\n    else\n    -- Object is bad, assign random color\n        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})\n        table.insert(boolList,false)\n    end\nend \n \n', 'tags': '', 'url': 'W14.html'}, {'title': 'W15', 'text': '我是被分配到使用 solvespace \n 以下的nx檔是由 40923102、40923110所繪製的 →  uarm nx零件檔 \n \n \n \n \n', 'tags': '', 'url': 'W15.html'}, {'title': 'W16', 'text': '1. online exam \n 2. Visualization Stream \n', 'tags': '', 'url': 'W16.html'}, {'title': 'Online Exam', 'text': '複製 uarm_nx_tkinter_gui_control.ttt 檔裡的程式，貼到 uarm_nx_tic_tae_toe_DH.ttt，再來將uarm_tkinter_control.py 打開並執行，最後把 to cannect 連接，就可以用外部去控制。 \n 1.已知左側綠色底座的 uArm 機械手臂, 其基座座標原點位於絕對座標 (1.0, 0.25, 0), 啟動模擬後 green_suctionpad_frame 座標原點則位於 (0.22859, 0.26047, 0.36576), 請列出運算式說明, 啟動模擬後 joint1, joint2 與 joint3 分別以逆時針旋轉 5 度後, 求 green_suctionpad_frame 的絕對座標值。 \n Ans：green_suctionpad_frame 的絕對座標 (x=+0.2597,y=+0.2602,z=+0.3475) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n 2.已知左側 uarm 前方的紅色方塊頂端中心座標值為 (0.2, 0.4, 0.1), 請列出運算式說明左側 uarm 機械手臂的 joint1, joint2 與 joint3 該如何旋轉才能讓 end effector 的吸盤末端中心點移動至紅色方塊頂端中心? \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Online Exam.html'}, {'title': 'Visualization Stream', 'text': '過 Python Remote API 控制伺服器場景與實體機電系統中的制動元件 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Visualization Stream.html'}, {'title': 'W17', 'text': '', 'tags': '', 'url': 'W17.html'}, {'title': 'midterm', 'text': 'blog： midterm.html \n uarm 各零件工程圖、組合圖 \n \n \n \n \n \n', 'tags': '', 'url': 'midterm.html'}, {'title': '期末考週', 'text': '1.利用老師倉儲內\xa0 downloads / w8_midterm / w8_uarm_nx1 2 / uarm_robot_nx12\xa0 裡的 \xa0uArm  機械手臂零件，修改 nx12絞鍊 、 front joint \xa0零件外型，使能  Triangular connecting rod 、 left link 、 end link  等零組件和\xa0 right crank 、 right link \xa0的零組件左右互換。完成新 uArm 機械手臂組合檔案後，將零組件檔案放入個人 cd2022 倉儲 downloads 中的  w18/uarm  目錄後執行  acp "完成期末考週 uarm 新組立檔案" \xa0 \n 2.Wink 零組件繪圖過程（使用 NX12 更改零組件及組立） \n \n \n \n \n 心得：再更改零件的拉伸時，還要注意是不是會影響到其他的草圖或拉伸；在組裝的時候覺得很麻煩，有時候會左右不分然後約束錯方向，就要一直重來，花了很多使間在看左右，而且有時候約束完會忘記按套用或確認，下意識就直接按取消，然後就要重新載入零件或重新在約束一次。 \n 3.將組立件轉入 CoppeliaSim 4.3.0 rev3. 後，以 slider 控制前三軸的轉動 \n \n \n \n', 'tags': '', 'url': '期末考週.html'}, {'title': 'NX教學影片', 'text': '解壓縮 NX1980 後嘗試打開可是失敗，結果是認證主機的位置錯誤，以下是更改認證主機位置 \n \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'NX教學影片.html'}]};